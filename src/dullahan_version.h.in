/*
    **************************************************************************
    IMPORTANT: This file (dullahan_version.h) is automatically generated by
               CMake using dullahan_version.h.in as a template.
               Do not edit dullahan_version.h by hand otherwise your changes
               will be the lost next time you run CMake with the
               CMakeLists.txt file in the root directory.
    **************************************************************************

    @brief Dullahan - a headless browser rendering engine
           based around the Chromium Embedded Framework
    @author Callum Prentice 2017

    Copyright (c) 2017, Linden Research, Inc.

    Permission is hereby granted, free of charge, to any person obtaining a copy
    of this software and associated documentation files (the "Software"), to deal
    in the Software without restriction, including without limitation the rights
    to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
    copies of the Software, and to permit persons to whom the Software is
    furnished to do so, subject to the following conditions:

    The above copyright notice and this permission notice shall be included in
    all copies or substantial portions of the Software.

    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
    FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
    AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
    LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
    OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
    THE SOFTWARE.
*/

#ifndef _DULLAHAN_VERSION
#define _DULLAHAN_VERSION

// version of this package
#define DULLAHAN_VERSION_MAJOR 1
#define DULLAHAN_VERSION_MINOR 15
#define DULLAHAN_VERSION_POINT 0

// The build version number as of v1.2 is now the date/time the build was made
// It is only regenerated if the constructed version header (dullahan_version.h)
// is not present when the Cmake script is executed. Not perfect - one can still
// have different build numbers for same set of source files - but it thankfully
// removed the requirement to remember to change the version/build number each
// time a change is made to the Dullahan source (which was often missed).
// Credit for suggestion to Henri Beauchamp
@BUILDNUMBER@

// version numbers pulled from CEF build via Cmake
@CEF_VERSION_STR@
@CHROME_VERSION_MAJOR_STR@
@CHROME_VERSION_MINOR_STR@
@CHROME_VERSION_BUILD_STR@
@CHROME_VERSION_PATCH_STR@

#endif //  _DULLAHAN_VERSION
